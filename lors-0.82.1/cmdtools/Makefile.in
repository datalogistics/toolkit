# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@

bindir = @prefix@/bin
libdir = @prefix@/lib
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
CPP = @CPP@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
E2EDIR = @E2EDIR@
EXTRA_CFLAGS = @EXTRA_CFLAGS@
GCC_INC_DIR = @GCC_INC_DIR@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBS = @LIBS@
LN_S = @LN_S@
LORS_BUILD_LBONE = @LORS_BUILD_LBONE@
LORS_BUILD_LIBAES = @LORS_BUILD_LIBAES@
LORS_BUILD_LIBXND = @LORS_BUILD_LIBXND@
LORS_BUILD_POPT = @LORS_BUILD_POPT@
LORS_BUILD_XML2 = @LORS_BUILD_XML2@
LORS_BUILD_ZLIB = @LORS_BUILD_ZLIB@
LORS_LBONE_DIR = @LORS_LBONE_DIR@
LORS_LBONE_SRC_DIR = @LORS_LBONE_SRC_DIR@
LORS_LIBAES_DIR = @LORS_LIBAES_DIR@
LORS_LIBAES_SRC_DIR = @LORS_LIBAES_SRC_DIR@
LORS_LIBXND_DIR = @LORS_LIBXND_DIR@
LORS_LIBXND_SRC_DIR = @LORS_LIBXND_SRC_DIR@
LORS_POPT_DIR = @LORS_POPT_DIR@
LORS_POPT_SRC_DIR = @LORS_POPT_SRC_DIR@
LORS_XML2_DIR = @LORS_XML2_DIR@
LORS_XML2_SRC_DIR = @LORS_XML2_SRC_DIR@
LORS_ZLIB_DIR = @LORS_ZLIB_DIR@
LORS_ZLIB_SRC_DIR = @LORS_ZLIB_SRC_DIR@
OSDEF = @OSDEF@
OSTYPE = @OSTYPE@
PACKAGE = @PACKAGE@
PREFIX = @PREFIX@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
WISH = @WISH@
XML2CONFIG = @XML2CONFIG@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
bin_PROGRAMS = lors_upload lors_download lors_ls lors_augment lors_refresh lors_test lors_trim lors_launch lbone_resolution lbone_test lors_route lors_e2etest lors_modify

LBNINC = @LORS_LBONE_DIR@/include
LBNLIB = @LORS_LBONE_DIR@/lib/liblbone.a
FDRLIB = @LORS_LBONE_DIR@/lib/libfdr.a

PIPEDIR = $(HOME)/research/xnd_suite/eXnode/pipeline/
PIPEINC = $(PIPEDIR)/local/include
PIPELIB = $(PIPEDIR)/local/lib/libpipeline.a

IBPDIR = @LORS_LBONE_DIR@
IBPINC = $(IBPDIR)/include
IBPLIB = $(IBPDIR)/lib/libibp.a

XNDINC = @LORS_LIBXND_DIR@/include/libexnode/
XNDLIB = @LORS_LIBXND_DIR@/lib/libexnode.a

XML2_INC = @LORS_XML2_DIR@/include/libxml2
XML2_LIB = @LORS_XML2_DIR@/lib

POPT_INC = @LORS_POPT_DIR@/include
POPT_LIB = -L@LORS_POPT_DIR@/lib -lpopt

ZLIB_INC = @LORS_ZLIB_DIR@/include
ZLIB_LIB = -L@LORS_ZLIB_DIR@/lib -lz

E2EINC = @E2EDIR@
E2ELIB = @E2EDIR@/libend2end.a $(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a $(E2EDIR)/aes/libaes.a

LORSLIB = ../src/liblors.a

AM_CPPFLAGS = -I../include -I$(XML2_INC) -I$(XNDINC) -I$(LBNINC) -I$(IBPINC) -I$(E2EINC) -I$(POPT_INC) -I$(ZLIB_INC)  

AM_CFLAGS = -g -D@OSDEF@ @EXTRA_CFLAGS@
LDADD = $(LORSLIB) $(XNDLIB) $(LBNLIB) $(FDRLIB) $(IBPLIB) -L$(XML2_LIB) $(POPT_LIB) -lpthread -lxml2 $(E2ELIB) $(ZLIB_LIB) @LIBS@  

lors_upload_SOURCES = lors_upload.c lors_file.c lors_libe2e.c parse_xndrc.c
lors_upload_LDADD = -lpopt $(LDADD)

lors_download_SOURCES = lors_download.c lors_file.c parse_xndrc.c lors_libe2e.c
lors_download_LDADD = -lpopt $(LDADD)

lors_ls_SOURCES = lors_ls.c lors_file.c parse_xndrc.c lors_libe2e.c
lors_ls_LDADD = -lpopt $(LDADD)

lors_augment_SOURCES = lors_augment.c lors_file.c parse_xndrc.c lors_libe2e.c
lors_augment_LDADD = -lpopt $(LDADD)

lors_refresh_SOURCES = lors_refresh.c lors_file.c parse_xndrc.c lors_libe2e.c
lors_refresh_LDADD = -lpopt $(LDADD)

lors_test_SOURCES = lors_test.c lors_file.c lors_libe2e.c
lors_test_LDADD = -lpopt $(LDADD)

lbone_resolution_SOURCES = lbone_resolution.c parse_xndrc.c
lbone_resolution_LDADD = -lpopt $(LDADD)

lbone_test_SOURCES = lbone_test.c parse_xndrc.c
lbone_test_LDADD = -lpopt $(LDADD)

lors_e2etest_SOURCES = lors_e2etest.c parse_xndrc.c lors_file.c lors_libe2e.c
lors_e2etest_LDADD = -lpopt $(LDADD)

lors_route_SOURCES = lors_route.c parse_xndrc.c lors_file.c lors_libe2e.c
lors_route_LDADD = -lpopt $(LDADD)

lors_trim_SOURCES = lors_trim.c lors_file.c lors_libe2e.c parse_xndrc.c
lors_trim_LDADD = -lpopt $(LDADD)

lors_modify_SOURCES = lors_modify.c lors_file.c lors_libe2e.c  parse_xndrc.c
lors_modify_LDADD = -lpopt $(LDADD)

lors_launch_SOURCES = lors_launch.c
lors_launch_LDADD = $(LBNLIB)
subdir = cmdtools
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = lors_upload$(EXEEXT) lors_download$(EXEEXT) \
	lors_ls$(EXEEXT) lors_augment$(EXEEXT) lors_refresh$(EXEEXT) \
	lors_test$(EXEEXT) lors_trim$(EXEEXT) lors_launch$(EXEEXT) \
	lbone_resolution$(EXEEXT) lbone_test$(EXEEXT) \
	lors_route$(EXEEXT) lors_e2etest$(EXEEXT) lors_modify$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_lbone_resolution_OBJECTS = lbone_resolution.$(OBJEXT) \
	parse_xndrc.$(OBJEXT)
lbone_resolution_OBJECTS = $(am_lbone_resolution_OBJECTS)
lbone_resolution_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lbone_resolution_LDFLAGS =
am_lbone_test_OBJECTS = lbone_test.$(OBJEXT) parse_xndrc.$(OBJEXT)
lbone_test_OBJECTS = $(am_lbone_test_OBJECTS)
lbone_test_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lbone_test_LDFLAGS =
am_lors_augment_OBJECTS = lors_augment.$(OBJEXT) lors_file.$(OBJEXT) \
	parse_xndrc.$(OBJEXT) lors_libe2e.$(OBJEXT)
lors_augment_OBJECTS = $(am_lors_augment_OBJECTS)
lors_augment_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lors_augment_LDFLAGS =
am_lors_download_OBJECTS = lors_download.$(OBJEXT) lors_file.$(OBJEXT) \
	parse_xndrc.$(OBJEXT) lors_libe2e.$(OBJEXT)
lors_download_OBJECTS = $(am_lors_download_OBJECTS)
lors_download_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lors_download_LDFLAGS =
am_lors_e2etest_OBJECTS = lors_e2etest.$(OBJEXT) parse_xndrc.$(OBJEXT) \
	lors_file.$(OBJEXT) lors_libe2e.$(OBJEXT)
lors_e2etest_OBJECTS = $(am_lors_e2etest_OBJECTS)
lors_e2etest_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lors_e2etest_LDFLAGS =
am_lors_launch_OBJECTS = lors_launch.$(OBJEXT)
lors_launch_OBJECTS = $(am_lors_launch_OBJECTS)
lors_launch_DEPENDENCIES = @LORS_LBONE_DIR@/lib/liblbone.a
lors_launch_LDFLAGS =
am_lors_ls_OBJECTS = lors_ls.$(OBJEXT) lors_file.$(OBJEXT) \
	parse_xndrc.$(OBJEXT) lors_libe2e.$(OBJEXT)
lors_ls_OBJECTS = $(am_lors_ls_OBJECTS)
lors_ls_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lors_ls_LDFLAGS =
am_lors_modify_OBJECTS = lors_modify.$(OBJEXT) lors_file.$(OBJEXT) \
	lors_libe2e.$(OBJEXT) parse_xndrc.$(OBJEXT)
lors_modify_OBJECTS = $(am_lors_modify_OBJECTS)
lors_modify_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lors_modify_LDFLAGS =
am_lors_refresh_OBJECTS = lors_refresh.$(OBJEXT) lors_file.$(OBJEXT) \
	parse_xndrc.$(OBJEXT) lors_libe2e.$(OBJEXT)
lors_refresh_OBJECTS = $(am_lors_refresh_OBJECTS)
lors_refresh_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lors_refresh_LDFLAGS =
am_lors_route_OBJECTS = lors_route.$(OBJEXT) parse_xndrc.$(OBJEXT) \
	lors_file.$(OBJEXT) lors_libe2e.$(OBJEXT)
lors_route_OBJECTS = $(am_lors_route_OBJECTS)
lors_route_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lors_route_LDFLAGS =
am_lors_test_OBJECTS = lors_test.$(OBJEXT) lors_file.$(OBJEXT) \
	lors_libe2e.$(OBJEXT)
lors_test_OBJECTS = $(am_lors_test_OBJECTS)
lors_test_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lors_test_LDFLAGS =
am_lors_trim_OBJECTS = lors_trim.$(OBJEXT) lors_file.$(OBJEXT) \
	lors_libe2e.$(OBJEXT) parse_xndrc.$(OBJEXT)
lors_trim_OBJECTS = $(am_lors_trim_OBJECTS)
lors_trim_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lors_trim_LDFLAGS =
am_lors_upload_OBJECTS = lors_upload.$(OBJEXT) lors_file.$(OBJEXT) \
	lors_libe2e.$(OBJEXT) parse_xndrc.$(OBJEXT)
lors_upload_OBJECTS = $(am_lors_upload_OBJECTS)
lors_upload_DEPENDENCIES = ../src/liblors.a \
	@LORS_LIBXND_DIR@/lib/libexnode.a \
	@LORS_LBONE_DIR@/lib/liblbone.a @LORS_LBONE_DIR@/lib/libfdr.a \
	$(IBPDIR)/lib/libibp.a @E2EDIR@/libend2end.a \
	$(E2EDIR)/md5/libmd5.a $(E2EDIR)/des/libdes.a \
	$(E2EDIR)/aes/libaes.a
lors_upload_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(lbone_resolution_SOURCES) $(lbone_test_SOURCES) \
	$(lors_augment_SOURCES) $(lors_download_SOURCES) \
	$(lors_e2etest_SOURCES) $(lors_launch_SOURCES) \
	$(lors_ls_SOURCES) $(lors_modify_SOURCES) \
	$(lors_refresh_SOURCES) $(lors_route_SOURCES) \
	$(lors_test_SOURCES) $(lors_trim_SOURCES) \
	$(lors_upload_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(lbone_resolution_SOURCES) $(lbone_test_SOURCES) $(lors_augment_SOURCES) $(lors_download_SOURCES) $(lors_e2etest_SOURCES) $(lors_launch_SOURCES) $(lors_ls_SOURCES) $(lors_modify_SOURCES) $(lors_refresh_SOURCES) $(lors_route_SOURCES) $(lors_test_SOURCES) $(lors_trim_SOURCES) $(lors_upload_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  --ignore-deps cmdtools/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
lbone_resolution$(EXEEXT): $(lbone_resolution_OBJECTS) $(lbone_resolution_DEPENDENCIES) 
	@rm -f lbone_resolution$(EXEEXT)
	$(LINK) $(lbone_resolution_LDFLAGS) $(lbone_resolution_OBJECTS) $(lbone_resolution_LDADD) $(LIBS)
lbone_test$(EXEEXT): $(lbone_test_OBJECTS) $(lbone_test_DEPENDENCIES) 
	@rm -f lbone_test$(EXEEXT)
	$(LINK) $(lbone_test_LDFLAGS) $(lbone_test_OBJECTS) $(lbone_test_LDADD) $(LIBS)
lors_augment$(EXEEXT): $(lors_augment_OBJECTS) $(lors_augment_DEPENDENCIES) 
	@rm -f lors_augment$(EXEEXT)
	$(LINK) $(lors_augment_LDFLAGS) $(lors_augment_OBJECTS) $(lors_augment_LDADD) $(LIBS)
lors_download$(EXEEXT): $(lors_download_OBJECTS) $(lors_download_DEPENDENCIES) 
	@rm -f lors_download$(EXEEXT)
	$(LINK) $(lors_download_LDFLAGS) $(lors_download_OBJECTS) $(lors_download_LDADD) $(LIBS)
lors_e2etest$(EXEEXT): $(lors_e2etest_OBJECTS) $(lors_e2etest_DEPENDENCIES) 
	@rm -f lors_e2etest$(EXEEXT)
	$(LINK) $(lors_e2etest_LDFLAGS) $(lors_e2etest_OBJECTS) $(lors_e2etest_LDADD) $(LIBS)
lors_launch$(EXEEXT): $(lors_launch_OBJECTS) $(lors_launch_DEPENDENCIES) 
	@rm -f lors_launch$(EXEEXT)
	$(LINK) $(lors_launch_LDFLAGS) $(lors_launch_OBJECTS) $(lors_launch_LDADD) $(LIBS)
lors_ls$(EXEEXT): $(lors_ls_OBJECTS) $(lors_ls_DEPENDENCIES) 
	@rm -f lors_ls$(EXEEXT)
	$(LINK) $(lors_ls_LDFLAGS) $(lors_ls_OBJECTS) $(lors_ls_LDADD) $(LIBS)
lors_modify$(EXEEXT): $(lors_modify_OBJECTS) $(lors_modify_DEPENDENCIES) 
	@rm -f lors_modify$(EXEEXT)
	$(LINK) $(lors_modify_LDFLAGS) $(lors_modify_OBJECTS) $(lors_modify_LDADD) $(LIBS)
lors_refresh$(EXEEXT): $(lors_refresh_OBJECTS) $(lors_refresh_DEPENDENCIES) 
	@rm -f lors_refresh$(EXEEXT)
	$(LINK) $(lors_refresh_LDFLAGS) $(lors_refresh_OBJECTS) $(lors_refresh_LDADD) $(LIBS)
lors_route$(EXEEXT): $(lors_route_OBJECTS) $(lors_route_DEPENDENCIES) 
	@rm -f lors_route$(EXEEXT)
	$(LINK) $(lors_route_LDFLAGS) $(lors_route_OBJECTS) $(lors_route_LDADD) $(LIBS)
lors_test$(EXEEXT): $(lors_test_OBJECTS) $(lors_test_DEPENDENCIES) 
	@rm -f lors_test$(EXEEXT)
	$(LINK) $(lors_test_LDFLAGS) $(lors_test_OBJECTS) $(lors_test_LDADD) $(LIBS)
lors_trim$(EXEEXT): $(lors_trim_OBJECTS) $(lors_trim_DEPENDENCIES) 
	@rm -f lors_trim$(EXEEXT)
	$(LINK) $(lors_trim_LDFLAGS) $(lors_trim_OBJECTS) $(lors_trim_LDADD) $(LIBS)
lors_upload$(EXEEXT): $(lors_upload_OBJECTS) $(lors_upload_DEPENDENCIES) 
	@rm -f lors_upload$(EXEEXT)
	$(LINK) $(lors_upload_LDFLAGS) $(lors_upload_OBJECTS) $(lors_upload_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	$(COMPILE) -c `cygpath -w $<`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic tags \
	uninstall uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
